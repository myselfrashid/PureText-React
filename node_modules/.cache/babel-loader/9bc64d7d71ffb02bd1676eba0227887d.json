{"ast":null,"code":"import _slicedToArray from \"D:\\\\Websites\\\\React\\\\project_1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Websites\\\\React\\\\project_1\\\\src\\\\components\\\\TextForm.js\";\nimport React, { useState } from 'react';\nexport default function TextForm(props) {\n  var handleUpClick = function handleUpClick() {\n    var newText = text.toUpperCase();\n    setText(newText);\n    props.showAlert('Converted to uppercase', 'success');\n  };\n\n  var handleLowClick = function handleLowClick() {\n    var newText = text.toLowerCase();\n    setText(newText);\n    props.showAlert('Converted to lowercase', 'success');\n  };\n\n  var handleClear = function handleClear() {\n    var newText = '';\n    setText(newText);\n    props.showAlert('Text Cleared', 'success');\n  };\n\n  var handleCopyText = function handleCopyText() {\n    var copiedText = document.getElementById('myBox');\n    copiedText.select();\n    copiedText.setSelectionRange(0, 99999);\n    navigator.clipboard.writeText(copiedText.value);\n    console.log('handle copy was clicked');\n    props.showAlert('Copied to Clipboard', 'success');\n  };\n\n  var handleOnChange = function handleOnChange(event) {\n    setText(event.target.value);\n  };\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      color: props.mode === 'dark' ? 'white' : 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, props.Heading), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3 my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"form-control\",\n    id: \"myBox\",\n    rows: \"8\",\n    value: text,\n    onChange: handleOnChange,\n    style: {\n      backgroundColor: props.mode === 'dark' ? '#2a2d30' : 'white',\n      color: props.mode === 'dark' ? 'white' : 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary my-1 mx-1\",\n    onClick: handleUpClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Convert to Uppercase\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary my-1 mx-1\",\n    onClick: handleLowClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"Convert to Lowercase\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-secondary my-1 mx-1\",\n    onClick: handleClear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"Clear\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary my-1 mx-1\",\n    onClick: handleCopyText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"Copy to Clipboard\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container my-3\",\n    style: {\n      color: props.mode === 'dark' ? 'white' : 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, \"Your Text Summary\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, \"Text contains: \", text.length, \" characters\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, \"Text contains: \", text.split(' ').length - 1, \" word(s)\")));\n}","map":{"version":3,"names":["React","useState","TextForm","props","handleUpClick","newText","text","toUpperCase","setText","showAlert","handleLowClick","toLowerCase","handleClear","handleCopyText","copiedText","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","value","console","log","handleOnChange","event","target","color","mode","Heading","backgroundColor","length","split"],"sources":["D:/Websites/React/project_1/src/components/TextForm.js"],"sourcesContent":["import React, {useState} from 'react';\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () =>{\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert('Converted to uppercase', 'success');\r\n    }\r\n    const handleLowClick = () =>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert('Converted to lowercase', 'success');\r\n    }\r\n    const handleClear = () =>{\r\n        let newText = ('');\r\n        setText(newText);\r\n        props.showAlert('Text Cleared', 'success');\r\n    }\r\n    const handleCopyText = () =>{\r\n        let copiedText = document.getElementById('myBox');\r\n        copiedText.select();\r\n        copiedText.setSelectionRange(0, 99999);\r\n        navigator.clipboard.writeText(copiedText.value);\r\n        console.log('handle copy was clicked')\r\n        props.showAlert('Copied to Clipboard', 'success');\r\n    }\r\n    const handleOnChange = (event) =>{\r\n        setText(event.target.value);\r\n    }\r\n    const [text, setText] = useState('');\r\n    return (\r\n        <div>\r\n            <h1 style = {{color: props.mode==='dark'?'white':'black'}}>{props.Heading}</h1>\r\n            <div className=\"mb-3 my-2\" >\r\n                <textarea className=\"form-control\" id=\"myBox\" rows=\"8\" value={text} onChange={handleOnChange} style = {{backgroundColor: props.mode==='dark'?'#2a2d30':'white', color: props.mode==='dark'?'white':'black'}}></textarea>\r\n            </div>\r\n            <div>\r\n            <button className=\"btn btn-primary my-1 mx-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button className=\"btn btn-primary my-1 mx-1\" onClick={handleLowClick}>Convert to Lowercase</button>\r\n            <button className=\"btn btn-secondary my-1 mx-1\" onClick={handleClear}>Clear</button>\r\n            <button className=\"btn btn-primary my-1 mx-1\" onClick={handleCopyText}>Copy to Clipboard</button>\r\n            </div>\r\n            <div className=\"container my-3\" style = {{color: props.mode==='dark'?'white':'black'}}>\r\n                <h2>Your Text Summary</h2>\r\n                <p>Text contains: {text.length} characters</p>\r\n                <p>Text contains: {text.split(' ').length -1} word(s)</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}